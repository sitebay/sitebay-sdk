/*
 * Site Bay
 * OpenAPI schema for the Agency plan. Access for only $99USD per month! Swagger docs available at https://my.sitebay.org/docs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HTTPValidationError;
import org.openapitools.client.model.UNKNOWN_BASE_TYPE;
import org.openapitools.client.model.UserUpdateSafe;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountApi
 */
@Ignore
public class AccountApiTest {

    private final AccountApi api = new AccountApi();

    
    /**
     * Delete payment method
     *
     * Delete a non-default payment method
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePaymentMethodTest() throws ApiException {
        String paymentMethodId = null;
                Object response = api.deletePaymentMethod(paymentMethodId);
        // TODO: test validations
    }
    
    /**
     * Delete payment method
     *
     * Delete a non-default payment method
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePaymentMethod_0Test() throws ApiException {
        String paymentMethodId = null;
                Object response = api.deletePaymentMethod_0(paymentMethodId);
        // TODO: test validations
    }
    
    /**
     * Get payment methods
     *
     * Get your payment methods
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPaymentMethodsTest() throws ApiException {
                Object response = api.getPaymentMethods();
        // TODO: test validations
    }
    
    /**
     * Get payment methods
     *
     * Get your payment methods
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPaymentMethods_0Test() throws ApiException {
                Object response = api.getPaymentMethods_0();
        // TODO: test validations
    }
    
    /**
     * Get tax
     *
     * Get your default card&#39;s sales tax percentage
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTaxTest() throws ApiException {
                Object response = api.getTax();
        // TODO: test validations
    }
    
    /**
     * Get tax
     *
     * Get your default card&#39;s sales tax percentage
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTax_0Test() throws ApiException {
                Object response = api.getTax_0();
        // TODO: test validations
    }
    
    /**
     * Get own user
     *
     * Get your user data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserMeTest() throws ApiException {
                Object response = api.getUserMe();
        // TODO: test validations
    }
    
    /**
     * Get own user
     *
     * Get your user data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserMe_0Test() throws ApiException {
                Object response = api.getUserMe_0();
        // TODO: test validations
    }
    
    /**
     * Revoke OAuth
     *
     * Revoke your Git OAuth permission
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void revokeOauthTest() throws ApiException {
        String provider = null;
                Object response = api.revokeOauth(provider);
        // TODO: test validations
    }
    
    /**
     * Revoke OAuth
     *
     * Revoke your Git OAuth permission
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void revokeOauth_0Test() throws ApiException {
        String provider = null;
                Object response = api.revokeOauth_0(provider);
        // TODO: test validations
    }
    
    /**
     * Update payment method
     *
     * Select your default payment method to charge every billing cycle
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePaymentMethodTest() throws ApiException {
        String paymentMethodId = null;
                Object response = api.updatePaymentMethod(paymentMethodId);
        // TODO: test validations
    }
    
    /**
     * Update payment method
     *
     * Select your default payment method to charge every billing cycle
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePaymentMethod_0Test() throws ApiException {
        String paymentMethodId = null;
                Object response = api.updatePaymentMethod_0(paymentMethodId);
        // TODO: test validations
    }
    
    /**
     * Update user
     *
     * Update your user data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
                Object response = api.updateUser(UNKNOWN_BASE_TYPE);
        // TODO: test validations
    }
    
    /**
     * Update user
     *
     * Update your user data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUser_0Test() throws ApiException {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
                Object response = api.updateUser_0(UNKNOWN_BASE_TYPE);
        // TODO: test validations
    }
    
}
