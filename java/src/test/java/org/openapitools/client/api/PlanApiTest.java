/*
 * Site Bay
 * OpenAPI schema for the Agency plan. Access for only $99USD per month! Swagger docs available at https://my.sitebay.org/docs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HTTPValidationError;
import org.openapitools.client.model.Plan;
import org.openapitools.client.model.PlanCreate;
import org.openapitools.client.model.PlanUpdate;
import org.openapitools.client.model.UNKNOWN_BASE_TYPE;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PlanApi
 */
@Ignore
public class PlanApiTest {

    private final PlanApi api = new PlanApi();

    
    /**
     * Cancel Plan
     *
     * Cancel your plan, which will delete it at the end of your cycle
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cancelPlanTest() throws ApiException {
        String planId = null;
                Object response = api.cancelPlan(planId);
        // TODO: test validations
    }
    
    /**
     * Create a Plan
     *
     * Buy a new plan/team
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPlanTest() throws ApiException {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
                Plan response = api.createPlan(UNKNOWN_BASE_TYPE);
        // TODO: test validations
    }
    
    /**
     * Get Plan
     *
     * Get a plan by its UUID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPlanTest() throws ApiException {
        String planId = null;
                Plan response = api.getPlan(planId);
        // TODO: test validations
    }
    
    /**
     * Get Plans
     *
     * Get all your active plans
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPlansTest() throws ApiException {
                List<Plan> response = api.getPlans();
        // TODO: test validations
    }
    
    /**
     * Preview Plan
     *
     * Preview the proration change before you upgrade or downgrade your plan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void previewChangeTest() throws ApiException {
        String planId = null;
        String newPlanTypeName = null;
        Integer additionalSites = null;
                Object response = api.previewChange(planId, newPlanTypeName, additionalSites);
        // TODO: test validations
    }
    
    /**
     * Uncancel Plan
     *
     * Uncancel your cancelled plan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uncancelPlanTest() throws ApiException {
        String planId = null;
                Object response = api.uncancelPlan(planId);
        // TODO: test validations
    }
    
    /**
     * Update a Plan
     *
     * Upgrade or downgrade your plan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePlanTest() throws ApiException {
        String planId = null;
        PlanUpdate planUpdate = null;
                Plan response = api.updatePlan(planId, planUpdate);
        // TODO: test validations
    }
    
}
