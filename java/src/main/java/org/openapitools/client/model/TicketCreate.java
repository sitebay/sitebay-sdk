/*
 * Site Bay
 * OpenAPI schema for the Agency plan. Access for only $99USD per month! Swagger docs available at https://my.sitebay.org/docs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TicketCreate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-06T15:29:58.049226-06:00[America/Boise]")
public class TicketCreate {
  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_RESOLVED = "resolved";
  @SerializedName(SERIALIZED_NAME_RESOLVED)
  private Boolean resolved = false;

  public static final String SERIALIZED_NAME_S3_OBJECT = "s3_object";
  @SerializedName(SERIALIZED_NAME_S3_OBJECT)
  private String s3Object;

  public static final String SERIALIZED_NAME_SITE_LIVE_ID = "site_live_id";
  @SerializedName(SERIALIZED_NAME_SITE_LIVE_ID)
  private String siteLiveId;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public TicketCreate() { 
  }

  public TicketCreate category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
  }


  public TicketCreate description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public TicketCreate resolved(Boolean resolved) {
    
    this.resolved = resolved;
    return this;
  }

   /**
   * Get resolved
   * @return resolved
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getResolved() {
    return resolved;
  }


  public void setResolved(Boolean resolved) {
    this.resolved = resolved;
  }


  public TicketCreate s3Object(String s3Object) {
    
    this.s3Object = s3Object;
    return this;
  }

   /**
   * Get s3Object
   * @return s3Object
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getS3Object() {
    return s3Object;
  }


  public void setS3Object(String s3Object) {
    this.s3Object = s3Object;
  }


  public TicketCreate siteLiveId(String siteLiveId) {
    
    this.siteLiveId = siteLiveId;
    return this;
  }

   /**
   * Get siteLiveId
   * @return siteLiveId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSiteLiveId() {
    return siteLiveId;
  }


  public void setSiteLiveId(String siteLiveId) {
    this.siteLiveId = siteLiveId;
  }


  public TicketCreate subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getSubject() {
    return subject;
  }


  public void setSubject(String subject) {
    this.subject = subject;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TicketCreate ticketCreate = (TicketCreate) o;
    return Objects.equals(this.category, ticketCreate.category) &&
        Objects.equals(this.description, ticketCreate.description) &&
        Objects.equals(this.resolved, ticketCreate.resolved) &&
        Objects.equals(this.s3Object, ticketCreate.s3Object) &&
        Objects.equals(this.siteLiveId, ticketCreate.siteLiveId) &&
        Objects.equals(this.subject, ticketCreate.subject);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, description, resolved, s3Object, siteLiveId, subject);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TicketCreate {\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    resolved: ").append(toIndentedString(resolved)).append("\n");
    sb.append("    s3Object: ").append(toIndentedString(s3Object)).append("\n");
    sb.append("    siteLiveId: ").append(toIndentedString(siteLiveId)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

