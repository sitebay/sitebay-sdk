/*
 * Site Bay
 * OpenAPI schema for the Agency plan. Access for only $99USD per month! Swagger docs available at https://my.sitebay.org/docs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Migration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-06T15:29:58.049226-06:00[America/Boise]")
public class Migration {
  public static final String SERIALIZED_NAME_CURRENT_URL = "current_url";
  @SerializedName(SERIALIZED_NAME_CURRENT_URL)
  private String currentUrl;

  public static final String SERIALIZED_NAME_EXTRA = "extra";
  @SerializedName(SERIALIZED_NAME_EXTRA)
  private String extra;

  public static final String SERIALIZED_NAME_FTP_ADDRESS = "ftp_address";
  @SerializedName(SERIALIZED_NAME_FTP_ADDRESS)
  private String ftpAddress;

  public static final String SERIALIZED_NAME_FTP_PASSWORD = "ftp_password";
  @SerializedName(SERIALIZED_NAME_FTP_PASSWORD)
  private String ftpPassword;

  public static final String SERIALIZED_NAME_FTP_USER = "ftp_user";
  @SerializedName(SERIALIZED_NAME_FTP_USER)
  private String ftpUser;

  public static final String SERIALIZED_NAME_HOST = "host";
  @SerializedName(SERIALIZED_NAME_HOST)
  private String host;

  public static final String SERIALIZED_NAME_HOST_PASSWORD = "host_password";
  @SerializedName(SERIALIZED_NAME_HOST_PASSWORD)
  private String hostPassword;

  public static final String SERIALIZED_NAME_HOST_USER = "host_user";
  @SerializedName(SERIALIZED_NAME_HOST_USER)
  private String hostUser;

  public static final String SERIALIZED_NAME_MIGRATION_TYPE = "migration_type";
  @SerializedName(SERIALIZED_NAME_MIGRATION_TYPE)
  private String migrationType;

  public static final String SERIALIZED_NAME_WORDPRESS_PASSWORD = "wordpress_password";
  @SerializedName(SERIALIZED_NAME_WORDPRESS_PASSWORD)
  private String wordpressPassword;

  public static final String SERIALIZED_NAME_WORDPRESS_USER = "wordpress_user";
  @SerializedName(SERIALIZED_NAME_WORDPRESS_USER)
  private String wordpressUser;

  public static final String SERIALIZED_NAME_ZIP_FILE_NAME = "zip_file_name";
  @SerializedName(SERIALIZED_NAME_ZIP_FILE_NAME)
  private String zipFileName;

  public Migration() { 
  }

  public Migration currentUrl(String currentUrl) {
    
    this.currentUrl = currentUrl;
    return this;
  }

   /**
   * Get currentUrl
   * @return currentUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCurrentUrl() {
    return currentUrl;
  }


  public void setCurrentUrl(String currentUrl) {
    this.currentUrl = currentUrl;
  }


  public Migration extra(String extra) {
    
    this.extra = extra;
    return this;
  }

   /**
   * Get extra
   * @return extra
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExtra() {
    return extra;
  }


  public void setExtra(String extra) {
    this.extra = extra;
  }


  public Migration ftpAddress(String ftpAddress) {
    
    this.ftpAddress = ftpAddress;
    return this;
  }

   /**
   * Get ftpAddress
   * @return ftpAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFtpAddress() {
    return ftpAddress;
  }


  public void setFtpAddress(String ftpAddress) {
    this.ftpAddress = ftpAddress;
  }


  public Migration ftpPassword(String ftpPassword) {
    
    this.ftpPassword = ftpPassword;
    return this;
  }

   /**
   * Get ftpPassword
   * @return ftpPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFtpPassword() {
    return ftpPassword;
  }


  public void setFtpPassword(String ftpPassword) {
    this.ftpPassword = ftpPassword;
  }


  public Migration ftpUser(String ftpUser) {
    
    this.ftpUser = ftpUser;
    return this;
  }

   /**
   * Get ftpUser
   * @return ftpUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFtpUser() {
    return ftpUser;
  }


  public void setFtpUser(String ftpUser) {
    this.ftpUser = ftpUser;
  }


  public Migration host(String host) {
    
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHost() {
    return host;
  }


  public void setHost(String host) {
    this.host = host;
  }


  public Migration hostPassword(String hostPassword) {
    
    this.hostPassword = hostPassword;
    return this;
  }

   /**
   * Get hostPassword
   * @return hostPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHostPassword() {
    return hostPassword;
  }


  public void setHostPassword(String hostPassword) {
    this.hostPassword = hostPassword;
  }


  public Migration hostUser(String hostUser) {
    
    this.hostUser = hostUser;
    return this;
  }

   /**
   * Get hostUser
   * @return hostUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHostUser() {
    return hostUser;
  }


  public void setHostUser(String hostUser) {
    this.hostUser = hostUser;
  }


  public Migration migrationType(String migrationType) {
    
    this.migrationType = migrationType;
    return this;
  }

   /**
   * Get migrationType
   * @return migrationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMigrationType() {
    return migrationType;
  }


  public void setMigrationType(String migrationType) {
    this.migrationType = migrationType;
  }


  public Migration wordpressPassword(String wordpressPassword) {
    
    this.wordpressPassword = wordpressPassword;
    return this;
  }

   /**
   * Get wordpressPassword
   * @return wordpressPassword
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getWordpressPassword() {
    return wordpressPassword;
  }


  public void setWordpressPassword(String wordpressPassword) {
    this.wordpressPassword = wordpressPassword;
  }


  public Migration wordpressUser(String wordpressUser) {
    
    this.wordpressUser = wordpressUser;
    return this;
  }

   /**
   * Get wordpressUser
   * @return wordpressUser
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getWordpressUser() {
    return wordpressUser;
  }


  public void setWordpressUser(String wordpressUser) {
    this.wordpressUser = wordpressUser;
  }


  public Migration zipFileName(String zipFileName) {
    
    this.zipFileName = zipFileName;
    return this;
  }

   /**
   * Get zipFileName
   * @return zipFileName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getZipFileName() {
    return zipFileName;
  }


  public void setZipFileName(String zipFileName) {
    this.zipFileName = zipFileName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Migration migration = (Migration) o;
    return Objects.equals(this.currentUrl, migration.currentUrl) &&
        Objects.equals(this.extra, migration.extra) &&
        Objects.equals(this.ftpAddress, migration.ftpAddress) &&
        Objects.equals(this.ftpPassword, migration.ftpPassword) &&
        Objects.equals(this.ftpUser, migration.ftpUser) &&
        Objects.equals(this.host, migration.host) &&
        Objects.equals(this.hostPassword, migration.hostPassword) &&
        Objects.equals(this.hostUser, migration.hostUser) &&
        Objects.equals(this.migrationType, migration.migrationType) &&
        Objects.equals(this.wordpressPassword, migration.wordpressPassword) &&
        Objects.equals(this.wordpressUser, migration.wordpressUser) &&
        Objects.equals(this.zipFileName, migration.zipFileName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentUrl, extra, ftpAddress, ftpPassword, ftpUser, host, hostPassword, hostUser, migrationType, wordpressPassword, wordpressUser, zipFileName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Migration {\n");
    sb.append("    currentUrl: ").append(toIndentedString(currentUrl)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    ftpAddress: ").append(toIndentedString(ftpAddress)).append("\n");
    sb.append("    ftpPassword: ").append(toIndentedString(ftpPassword)).append("\n");
    sb.append("    ftpUser: ").append(toIndentedString(ftpUser)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    hostPassword: ").append(toIndentedString(hostPassword)).append("\n");
    sb.append("    hostUser: ").append(toIndentedString(hostUser)).append("\n");
    sb.append("    migrationType: ").append(toIndentedString(migrationType)).append("\n");
    sb.append("    wordpressPassword: ").append(toIndentedString(wordpressPassword)).append("\n");
    sb.append("    wordpressUser: ").append(toIndentedString(wordpressUser)).append("\n");
    sb.append("    zipFileName: ").append(toIndentedString(zipFileName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

