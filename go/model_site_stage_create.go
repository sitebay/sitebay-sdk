/*
Site Bay

OpenAPI schema for the Agency plan. Access for only $99USD per month! Swagger docs available at https://my.sitebay.org/docs

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// SiteStageCreate struct for SiteStageCreate
type SiteStageCreate struct {
	GitBranch *string `json:"git_branch,omitempty"`
	RestorePoint *time.Time `json:"restore_point,omitempty"`
	Subdomain string `json:"subdomain"`
}

// NewSiteStageCreate instantiates a new SiteStageCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSiteStageCreate(subdomain string) *SiteStageCreate {
	this := SiteStageCreate{}
	this.Subdomain = subdomain
	return &this
}

// NewSiteStageCreateWithDefaults instantiates a new SiteStageCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteStageCreateWithDefaults() *SiteStageCreate {
	this := SiteStageCreate{}
	return &this
}

// GetGitBranch returns the GitBranch field value if set, zero value otherwise.
func (o *SiteStageCreate) GetGitBranch() string {
	if o == nil || o.GitBranch == nil {
		var ret string
		return ret
	}
	return *o.GitBranch
}

// GetGitBranchOk returns a tuple with the GitBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteStageCreate) GetGitBranchOk() (*string, bool) {
	if o == nil || o.GitBranch == nil {
		return nil, false
	}
	return o.GitBranch, true
}

// HasGitBranch returns a boolean if a field has been set.
func (o *SiteStageCreate) HasGitBranch() bool {
	if o != nil && o.GitBranch != nil {
		return true
	}

	return false
}

// SetGitBranch gets a reference to the given string and assigns it to the GitBranch field.
func (o *SiteStageCreate) SetGitBranch(v string) {
	o.GitBranch = &v
}

// GetRestorePoint returns the RestorePoint field value if set, zero value otherwise.
func (o *SiteStageCreate) GetRestorePoint() time.Time {
	if o == nil || o.RestorePoint == nil {
		var ret time.Time
		return ret
	}
	return *o.RestorePoint
}

// GetRestorePointOk returns a tuple with the RestorePoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteStageCreate) GetRestorePointOk() (*time.Time, bool) {
	if o == nil || o.RestorePoint == nil {
		return nil, false
	}
	return o.RestorePoint, true
}

// HasRestorePoint returns a boolean if a field has been set.
func (o *SiteStageCreate) HasRestorePoint() bool {
	if o != nil && o.RestorePoint != nil {
		return true
	}

	return false
}

// SetRestorePoint gets a reference to the given time.Time and assigns it to the RestorePoint field.
func (o *SiteStageCreate) SetRestorePoint(v time.Time) {
	o.RestorePoint = &v
}

// GetSubdomain returns the Subdomain field value
func (o *SiteStageCreate) GetSubdomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field value
// and a boolean to check if the value has been set.
func (o *SiteStageCreate) GetSubdomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Subdomain, true
}

// SetSubdomain sets field value
func (o *SiteStageCreate) SetSubdomain(v string) {
	o.Subdomain = v
}

func (o SiteStageCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GitBranch != nil {
		toSerialize["git_branch"] = o.GitBranch
	}
	if o.RestorePoint != nil {
		toSerialize["restore_point"] = o.RestorePoint
	}
	if true {
		toSerialize["subdomain"] = o.Subdomain
	}
	return json.Marshal(toSerialize)
}

type NullableSiteStageCreate struct {
	value *SiteStageCreate
	isSet bool
}

func (v NullableSiteStageCreate) Get() *SiteStageCreate {
	return v.value
}

func (v *NullableSiteStageCreate) Set(val *SiteStageCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableSiteStageCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableSiteStageCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSiteStageCreate(val *SiteStageCreate) *NullableSiteStageCreate {
	return &NullableSiteStageCreate{value: val, isSet: true}
}

func (v NullableSiteStageCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSiteStageCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


