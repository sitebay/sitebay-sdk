/*
Site Bay

OpenAPI schema for the Agency plan. Access for only $99USD per month! Swagger docs available at https://my.sitebay.org/docs

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Template struct for Template
type Template struct {
	Approved string `json:"approved"`
	FullDescription string `json:"full_description"`
	Name string `json:"name"`
	Plugins string `json:"plugins"`
	Quickstart string `json:"quickstart"`
	ShortDescription string `json:"short_description"`
	Tag string `json:"tag"`
	WpressUrl string `json:"wpress_url"`
}

// NewTemplate instantiates a new Template object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplate(approved string, fullDescription string, name string, plugins string, quickstart string, shortDescription string, tag string, wpressUrl string) *Template {
	this := Template{}
	this.Approved = approved
	this.FullDescription = fullDescription
	this.Name = name
	this.Plugins = plugins
	this.Quickstart = quickstart
	this.ShortDescription = shortDescription
	this.Tag = tag
	this.WpressUrl = wpressUrl
	return &this
}

// NewTemplateWithDefaults instantiates a new Template object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateWithDefaults() *Template {
	this := Template{}
	return &this
}

// GetApproved returns the Approved field value
func (o *Template) GetApproved() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Approved
}

// GetApprovedOk returns a tuple with the Approved field value
// and a boolean to check if the value has been set.
func (o *Template) GetApprovedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Approved, true
}

// SetApproved sets field value
func (o *Template) SetApproved(v string) {
	o.Approved = v
}

// GetFullDescription returns the FullDescription field value
func (o *Template) GetFullDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FullDescription
}

// GetFullDescriptionOk returns a tuple with the FullDescription field value
// and a boolean to check if the value has been set.
func (o *Template) GetFullDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FullDescription, true
}

// SetFullDescription sets field value
func (o *Template) SetFullDescription(v string) {
	o.FullDescription = v
}

// GetName returns the Name field value
func (o *Template) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Template) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Template) SetName(v string) {
	o.Name = v
}

// GetPlugins returns the Plugins field value
func (o *Template) GetPlugins() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Plugins
}

// GetPluginsOk returns a tuple with the Plugins field value
// and a boolean to check if the value has been set.
func (o *Template) GetPluginsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Plugins, true
}

// SetPlugins sets field value
func (o *Template) SetPlugins(v string) {
	o.Plugins = v
}

// GetQuickstart returns the Quickstart field value
func (o *Template) GetQuickstart() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Quickstart
}

// GetQuickstartOk returns a tuple with the Quickstart field value
// and a boolean to check if the value has been set.
func (o *Template) GetQuickstartOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Quickstart, true
}

// SetQuickstart sets field value
func (o *Template) SetQuickstart(v string) {
	o.Quickstart = v
}

// GetShortDescription returns the ShortDescription field value
func (o *Template) GetShortDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value
// and a boolean to check if the value has been set.
func (o *Template) GetShortDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ShortDescription, true
}

// SetShortDescription sets field value
func (o *Template) SetShortDescription(v string) {
	o.ShortDescription = v
}

// GetTag returns the Tag field value
func (o *Template) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *Template) GetTagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *Template) SetTag(v string) {
	o.Tag = v
}

// GetWpressUrl returns the WpressUrl field value
func (o *Template) GetWpressUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WpressUrl
}

// GetWpressUrlOk returns a tuple with the WpressUrl field value
// and a boolean to check if the value has been set.
func (o *Template) GetWpressUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WpressUrl, true
}

// SetWpressUrl sets field value
func (o *Template) SetWpressUrl(v string) {
	o.WpressUrl = v
}

func (o Template) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["approved"] = o.Approved
	}
	if true {
		toSerialize["full_description"] = o.FullDescription
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["plugins"] = o.Plugins
	}
	if true {
		toSerialize["quickstart"] = o.Quickstart
	}
	if true {
		toSerialize["short_description"] = o.ShortDescription
	}
	if true {
		toSerialize["tag"] = o.Tag
	}
	if true {
		toSerialize["wpress_url"] = o.WpressUrl
	}
	return json.Marshal(toSerialize)
}

type NullableTemplate struct {
	value *Template
	isSet bool
}

func (v NullableTemplate) Get() *Template {
	return v.value
}

func (v *NullableTemplate) Set(val *Template) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplate(val *Template) *NullableTemplate {
	return &NullableTemplate{value: val, isSet: true}
}

func (v NullableTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


