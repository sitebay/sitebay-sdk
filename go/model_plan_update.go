/*
Site Bay

OpenAPI schema for the Agency plan. Access for only $99USD per month! Swagger docs available at https://my.sitebay.org/docs

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PlanUpdate struct for PlanUpdate
type PlanUpdate struct {
	AdditionalSites int32 `json:"additional_sites"`
	PlanTypeName string `json:"plan_type_name"`
}

// NewPlanUpdate instantiates a new PlanUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlanUpdate(additionalSites int32, planTypeName string) *PlanUpdate {
	this := PlanUpdate{}
	this.AdditionalSites = additionalSites
	this.PlanTypeName = planTypeName
	return &this
}

// NewPlanUpdateWithDefaults instantiates a new PlanUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlanUpdateWithDefaults() *PlanUpdate {
	this := PlanUpdate{}
	return &this
}

// GetAdditionalSites returns the AdditionalSites field value
func (o *PlanUpdate) GetAdditionalSites() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AdditionalSites
}

// GetAdditionalSitesOk returns a tuple with the AdditionalSites field value
// and a boolean to check if the value has been set.
func (o *PlanUpdate) GetAdditionalSitesOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AdditionalSites, true
}

// SetAdditionalSites sets field value
func (o *PlanUpdate) SetAdditionalSites(v int32) {
	o.AdditionalSites = v
}

// GetPlanTypeName returns the PlanTypeName field value
func (o *PlanUpdate) GetPlanTypeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlanTypeName
}

// GetPlanTypeNameOk returns a tuple with the PlanTypeName field value
// and a boolean to check if the value has been set.
func (o *PlanUpdate) GetPlanTypeNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PlanTypeName, true
}

// SetPlanTypeName sets field value
func (o *PlanUpdate) SetPlanTypeName(v string) {
	o.PlanTypeName = v
}

func (o PlanUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["additional_sites"] = o.AdditionalSites
	}
	if true {
		toSerialize["plan_type_name"] = o.PlanTypeName
	}
	return json.Marshal(toSerialize)
}

type NullablePlanUpdate struct {
	value *PlanUpdate
	isSet bool
}

func (v NullablePlanUpdate) Get() *PlanUpdate {
	return v.value
}

func (v *NullablePlanUpdate) Set(val *PlanUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullablePlanUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullablePlanUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlanUpdate(val *PlanUpdate) *NullablePlanUpdate {
	return &NullablePlanUpdate{value: val, isSet: true}
}

func (v NullablePlanUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlanUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


