/*
Site Bay

OpenAPI schema for the Agency plan. Access for only $99USD per month! Swagger docs available at https://my.sitebay.org/docs

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TeamUpdate struct for TeamUpdate
type TeamUpdate struct {
	Name *string `json:"name,omitempty"`
	Timezone *string `json:"timezone,omitempty"`
}

// NewTeamUpdate instantiates a new TeamUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamUpdate() *TeamUpdate {
	this := TeamUpdate{}
	return &this
}

// NewTeamUpdateWithDefaults instantiates a new TeamUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamUpdateWithDefaults() *TeamUpdate {
	this := TeamUpdate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TeamUpdate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamUpdate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TeamUpdate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TeamUpdate) SetName(v string) {
	o.Name = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *TeamUpdate) GetTimezone() string {
	if o == nil || o.Timezone == nil {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamUpdate) GetTimezoneOk() (*string, bool) {
	if o == nil || o.Timezone == nil {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *TeamUpdate) HasTimezone() bool {
	if o != nil && o.Timezone != nil {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *TeamUpdate) SetTimezone(v string) {
	o.Timezone = &v
}

func (o TeamUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Timezone != nil {
		toSerialize["timezone"] = o.Timezone
	}
	return json.Marshal(toSerialize)
}

type NullableTeamUpdate struct {
	value *TeamUpdate
	isSet bool
}

func (v NullableTeamUpdate) Get() *TeamUpdate {
	return v.value
}

func (v *NullableTeamUpdate) Set(val *TeamUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamUpdate(val *TeamUpdate) *NullableTeamUpdate {
	return &NullableTeamUpdate{value: val, isSet: true}
}

func (v NullableTeamUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


